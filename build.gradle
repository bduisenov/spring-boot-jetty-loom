plugins {
	id 'org.springframework.boot' version '2.4.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}


configurations {
	compile.exclude module: 'spring-boot-starter-tomcat'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jetty'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

java {
	sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
}

def javaExecutablesPath = new File(javaHome, 'bin')
def javaExecutables = [:].withDefault { execName ->
	def executable = new File(javaExecutablesPath, execName)
	assert executable.exists(): "There is no ${execName} executable in ${javaExecutablesPath}"
	executable
}

tasks.withType(AbstractCompile) {
	options.with {
		fork = true
		forkOptions.javaHome = file(javaHome)
	}
}

tasks.withType(Javadoc) {
	executable = javaExecutables.javadoc
}

tasks.withType(Test) {
	executable = javaExecutables.java
}

tasks.withType(JavaExec) {
	executable = javaExecutables.java
}

compileJava.options.fork = true
compileJava.options.forkOptions.executable = '/Users/hahn/Downloads/jdk-16/bin/'
